name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Ruby 3.0 became EOL on 2024-04-23; kept for information only
        ruby: ['3.0', '3.1', '3.2', '3.3']

        # Rails 6.0 became EOL on 2023-06-01; kept for information only
        rails: ['6.0.6.1', '6.1.7.8', '7.0.8.4', '7.1.3.4', '7.2.0']

        exclude:
        # Excludes Rails 6.0 on Ruby 3.0+
        # Excludes Rails 7.2 on Ruby 3.0
        - rails: '6.0.6.1'
          ruby: '3.0'
        - rails: '6.0.6.1'
          ruby: '3.1'
        - rails: '6.0.6.1'
          ruby: '3.2'
        - rails: '6.0.6.1'
          ruby: '3.3'
        - rails: '7.2.0'
          ruby: '3.0'
    name: Ruby ${{ matrix.ruby }}, Rails ${{ matrix.rails }}
    env:
      RAILS_VERSION: ${{ matrix.rails }}

    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - uses: actions/cache@v4
      id: cache
      with:
        path: |
          rswag-ui/node_modules
          vendor/bundle
        key: ${{ runner.os }}-ruby_${{ matrix.ruby }}-rails_${{ matrix.rails }}-${{ hashFiles('Gemfile', '**/package-lock.json') }}

    - name: Install dependencies
      run: |
        if [ $(cut -d '.' -f 1 <<< "${{ matrix.ruby }}") -lt 3 ]; then
          gem update --system 3.4.22
        else
          gem update --system
        fi
        bundle install
        cd rswag-ui && npm install

    - name: rswag-api
      run: |
        cd rswag-api
        bundle exec rspec

    - name: rswag-specs
      if: success() || failure()
      run: |
        cd rswag-specs
        bundle exec rspec

    - name: rswag-ui
      if: success() || failure()
      run: |
        cd rswag-ui
        bundle exec rspec

    - name: test-app
      if: success() || failure()
      run: |
        cd test-app
        bundle exec rake db:migrate db:test:prepare
        bundle exec rspec
